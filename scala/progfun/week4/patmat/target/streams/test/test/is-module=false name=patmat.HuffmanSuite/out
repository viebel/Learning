[0m[[0minfo[0m] [0m[32mHuffmanSuite:[0m[0m
[0m[[0minfo[0m] [0m[32m- weight of a larger tree[0m[0m
[0m[[0minfo[0m] [0m[32m- chars of a larger tree[0m[0m
[0m[[0minfo[0m] [0m[32m- string2chars("hello, world")[0m[0m
[0m[[0minfo[0m] [0m[32m- times("hha")[0m[0m
[0m[[0minfo[0m] [0m[32m- times("hhahah")[0m[0m
[0m[[0minfo[0m] [0m[32m- makeOrderedLeafList for some frequency table[0m[0m
[0m[[0minfo[0m] [0m[32m- singleton[0m[0m
[0m[[0minfo[0m] [0m[32m- combine of some leaf list (1)[0m[0m
[0m[[0minfo[0m] [0m[32m- combine of some leaf list (2)[0m[0m
[0m[[0minfo[0m] [0m[32m- until[0m[0m
[0m[[0minfo[0m] [0m[32m- createCodeTree[0m[0m
[0m[[0minfo[0m] [0m[32m- decode (1)[0m[0m
[0m[[0minfo[0m] [0m[32m- decode (2)[0m[0m
[0m[[0minfo[0m] [0m[32m- decodedSecret[0m[0m
[0m[[0minfo[0m] [0m[32m- encode (1)[0m[0m
[0m[[0minfo[0m] [0m[32m- decode and encode a very short text should be identity[0m[0m
[0m[[0minfo[0m] [0m[32m- decode and encode a long text should be identity[0m[0m
[0m[[0minfo[0m] [0m[32m- convert (1)[0m[0m
[0m[[0minfo[0m] [0m[32m- convert (2)[0m[0m
[0m[[0minfo[0m] [0m[32m- quickEncode (1)[0m[0m
[0m[[0minfo[0m] [0m[32m- decode and quickEncode a very short text should be identity[0m[0m
[0m[[0minfo[0m] [0m[32m- decode and quickEncode a long text should be identity[0m[0m
